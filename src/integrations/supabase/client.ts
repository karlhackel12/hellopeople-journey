// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';
import { toast } from 'sonner';

const SUPABASE_URL = "https://roljsmhhptuwtsbirsxe.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJvbGpzbWhocHR1d3RzYmlyc3hlIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDE2NDg4NTMsImV4cCI6MjA1NzIyNDg1M30.SY6MAzg8mCVsMF0L2wseIIqET5ROq48wizK-RxeaNJU";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Error handling helper
export const handleSupabaseError = (error: Error | null, defaultMessage = "An unexpected error occurred") => {
  if (error) {
    console.error('Supabase error:', error);
    toast.error(defaultMessage, {
      description: error.message,
    });
    return error;
  }
  return null;
};

// Auth helpers
export const getCurrentUser = async () => {
  const { data, error } = await supabase.auth.getUser();
  handleSupabaseError(error);
  return data?.user || null;
};

export const getCurrentUserRole = async () => {
  const { data: user } = await supabase.auth.getUser();
  if (!user.user) return null;
  
  const { data, error } = await supabase
    .from('profiles')
    .select('role')
    .eq('id', user.user.id)
    .single();
  
  handleSupabaseError(error);
  return data?.role || null;
};

export const isTeacher = async () => {
  const role = await getCurrentUserRole();
  return role === 'teacher';
};

export const isStudent = async () => {
  const role = await getCurrentUserRole();
  return role === 'student';
};
